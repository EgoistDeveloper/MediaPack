// <auto-generated />
using System;
using MediaPack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MediaPack.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.2.20159.4");

            modelBuilder.Entity("MediaPack.Models.AppSetting.AppSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("IsEditable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SettingName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("MediaPack.Models.Channel.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MediaPack.Models.Channel.Entities.Channel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChannelType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("BLOB");

                    b.Property<string>("M3U8Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParseDocument")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParserAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParserDocumentRegex")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParserRequestRegex")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParserScript")
                        .HasColumnType("TEXT");

                    b.Property<string>("QualityOptionRegex")
                        .HasColumnType("TEXT");

                    b.Property<string>("QualityOptions")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelCode")
                        .IsUnique();

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("MediaPack.Models.Channel.Entities.ChannelFavorite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddedDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ChannelFavorites");
                });

            modelBuilder.Entity("MediaPack.Models.Channel.Entities.SpendTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddedDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TvChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WatchTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SpendTime");
                });

            modelBuilder.Entity("MediaPack.Models.Common.Entities.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alpha2code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Alpha3code")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Flag")
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Countries");
                });
#pragma warning restore 612, 618
        }
    }
}
